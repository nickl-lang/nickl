runRaylib :: () -> i64 {
    import raylib;

    SCREEN_WIDTH  :: 800;
    SCREEN_HEIGHT :: 450;

    raylib.InitWindow(SCREEN_WIDTH, SCREEN_HEIGHT, "raylib");
    raylib.SetWindowState(raylib.FLAG_WINDOW_RESIZABLE);

    x: i64 = SCREEN_WIDTH / 2;
    y: i64 = SCREEN_HEIGHT / 2;
    dist := 0;

    raylib.SetTargetFPS(60);

    while 0 == raylib.WindowShouldClose() {
        STEP :: 10;

        if raylib.IsKeyDown(raylib.KEY_RIGHT) { x = x + STEP; dist = dist + STEP; }
        if raylib.IsKeyDown(raylib.KEY_LEFT)  { x = x - STEP; dist = dist + STEP; }
        if raylib.IsKeyDown(raylib.KEY_UP)    { y = y - STEP; dist = dist + STEP; }
        if raylib.IsKeyDown(raylib.KEY_DOWN)  { y = y + STEP; dist = dist + STEP; }

        WHITE    :: raylib.Color{255, 255, 255, 255};
        MAROON   :: raylib.Color{190, 30,  55,  255};
        DARKGRAY :: raylib.Color{80,  80,  80,  255};

        RADIUS :: f32{50};

        raylib.BeginDrawing();
            raylib.ClearBackground(WHITE);
            raylib.DrawCircle(x, y, RADIUS, MAROON);
            raylib.DrawFPS(10, 10);
            raylib.DrawText("move the ball with arrow keys", 10, 30, 20, DARKGRAY);
            raylib.DrawText(raylib.TextFormat("distance traveled: %i pix", dist), 10, 50, 20, DARKGRAY);
        raylib.EndDrawing();
    }

    raylib.CloseWindow();

    return dist;
}

main :: (argc: i32, argv: **i8) -> i32 {
    import std;
    std.printf("distance traveled: %i pix\n", ${ runRaylib(); });
}

import compiler;
builder := compiler.createBuilder();
compiler.build(builder, main, "raylib_test");
compiler.freeBuilder(builder);
