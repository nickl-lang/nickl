import std;
import compiler;

MAGIC :: 0.654321;

Vec3 :: #type (f64, f64, f64);

vecLength :: (vec: Vec3) -> f64 {
    return std.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);
}

main :: (argc: i32, argv: **i8) -> i32 {
    // TODO Cannot do runtime object literal
    vec: Vec3;
    vec[0] = f64{0};
    vec[1] = std.sqrt(f64{3}) / f64{2};
    vec[2] = f64{0.5};
    len := vecLength(vec);
    std.printf("%lf\n", len + MAGIC);
    return i32{0};
}

main();

builder := compiler.createBuilder();
compiler.build(builder, cast(compiler.EntryPoint) main, "vec_length");
compiler.freeBuilder(builder);
