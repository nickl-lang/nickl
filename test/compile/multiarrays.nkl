main :: (argc: i32, argv: **i8) -> i32 {
    import std;

    W :: 2;
    H :: 2;
    SIZE :: W * H;

    ar: [W][H]i64;

    ar[0][0] = 1;
    ar[0][1] = 2;
    ar[1][0] = 3;
    ar[1][1] = 4;

    sl: []i64 = cast(*[SIZE]i64) &ar;

    i := 0;
    while i < sl.size {
        std.printf("%li", sl[i]);
        i = i + 1;
    }

    std.puts("");
}

main();

import compiler;
builder := compiler.createBuilder();
compiler.build(builder, cast(compiler.EntryPoint) main, "multiarrays");
compiler.freeBuilder(builder);
