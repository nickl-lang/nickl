def_run_test(NAME any OUTPUT_REGEX "^11 42\n$")
def_run_test(NAME arithmetic OUTPUT_REGEX "^11111111111111111111111111111\n$")
def_run_test(NAME arrays OUTPUT_REGEX "^ar\\[0\\]=1 ar\\[1\\]=2 ar\\[2\\]=4 \nar\\[0\\]=0 ar\\[1\\]=1 ar\\[2\\]=2 \n$")
def_run_test(NAME cast OUTPUT_REGEX "^i8{127}=127\ni8{128}=-128\nu8{-1}=255\nu8{512}=0\nu32{3.140000}=3\nf64{42}=42.000000\n$")
def_run_test(NAME comptime_order OUTPUT_REGEX "^1234\n$")
def_run_test(NAME comptime_run OUTPUT_REGEX "^comptime\nruntime\n$")
def_run_test(NAME declare_local OUTPUT_REGEX "^hello\n$")
def_run_test(NAME double_deref OUTPUT_REGEX "^42\n$")
def_run_test(NAME empty OUTPUT_REGEX "^$")
def_run_test(NAME enum OUTPUT_REGEX "^11111\n$")
def_run_test(NAME fast_exp OUTPUT_REGEX "^65536\n$")
def_run_test(NAME func OUTPUT_REGEX "^4\\+5=9\n$")
def_run_test(NAME generic OUTPUT_REGEX "^1 2 one two\n$")
def_run_test(NAME if OUTPUT_REGEX "^a is true!\n$")
def_run_test(NAME ir_optimization OUTPUT_REGEX "^3141592\n$")
def_run_test(NAME literal OUTPUT_REGEX "^4 5\n\\[r=255 g=0 b=0 a=255\\]\n$")
def_run_test(NAME native_func OUTPUT_REGEX "^Hello, World!\n$")
def_run_test(NAME pi OUTPUT_REGEX "^pi = 3.141592653589794\n$")
def_run_test(NAME pointers OUTPUT_REGEX "^v.x=1.23 v.y=4.56\n$")
def_run_test(NAME read_file OUTPUT_REGEX "^hello\nworld\n$")
def_run_test(NAME shadow OUTPUT_REGEX "^321\n$")
def_run_test(NAME slices OUTPUT_REGEX "^4 5 6\n$")
def_run_test(NAME union OUTPUT_REGEX "^123111\n$")
def_run_test(NAME while OUTPUT_REGEX "^i=0\ni=1\ni=2\n$")
