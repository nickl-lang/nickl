Q_rsqrt :: (number: f32) -> f32 {
    i: i32;
    x2: f32;
    y: f32;

    x2 = number * f32{0.5};
    y  = number;
    i  = (cast(*i32) &y).*;               // evil floating point bit level hacking
    i  = 0x5f3759df - (i >> 1);           // what the fuck?
    y  = (cast(*f32) &i).*;
    y  = y * (f32{1.5} - (x2 * y * y));   // 1st iteration
    y  = y * (f32{1.5} - (x2 * y * y));   // 2nd iteration

    return y;
}

import libc;
libc.printf("%lf\n", cast(f64) Q_rsqrt(f32{2.0}));
