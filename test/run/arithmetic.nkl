fabs :: (float x) -> float { return x < 0.0 ? -x : x; }

@assert(~5 == -6);
@assert(~1 == -2);
@assert(-1 == 0 - 1);
@assert(+1 == 0 + 1);

@assert(2 + 2 == 4);
@assert(3 - 4 == -1);
@assert(3 * 4 == 12);
@assert(4 / 2 == 2);
@assert(1 / 2 == 0);
@assert(fabs(1. / 2. - 0.5) < 1e-6);
@assert(5 % 2 == 1);

@assert(1 << 10 == 1024);
@assert(256 >> 2 == 64);

@assert((3 & 2) == 2);
@assert((1 | 2) == 3);
@assert((3 ^ 2) == 1);

@assert(bool != i8);

@assert(@typeof(true) == bool);
@assert(@typeof(false) == bool);

@assert((cast(i8) true & cast(i8) false) == 0);
@assert((cast(i8) true & cast(i8) true) == 1);

@assert(@typeof(!1) == bool);
@assert(!1 == false);
@assert(!0 == true);

@assert(cast(bool) 0 != true);
@assert(!(cast(bool) 1 != true));

@assert((1 || 0) == true);
@assert((1 && 0) == false);

a := false;
false && (a = true);
true || (a = true);
@assert(!a);
