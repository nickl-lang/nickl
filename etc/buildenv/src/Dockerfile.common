FROM {{DISTRO}} AS base

LABEL org.opencontainers.image.base.name="{{IMAGE_NAME}}:{{IMAGE_VERSION}}"
LABEL org.opencontainers.image.title="{{IMAGE_NAME}}"
LABEL org.opencontainers.image.version="{{IMAGE_VERSION}}"
LABEL org.opencontainers.image.created="{{IMAGE_CREATED}}"
LABEL org.opencontainers.image.ref.name="{{IMAGE_BASE_NAME}}"
LABEL org.opencontainers.image.authors="Nick Karter <nkarter@protonmail.com>"

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    ccache \
    curl \
    git \
    less \
    locales \
    ninja-build \
    openssl \
    pkg-config \
    software-properties-common \
    sudo \
    wget \
    zsh \
 && rm -rf /var/lib/apt/lists/*

RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=C

ENV CWGET_CACHE_DIR=/var/cache/cwget
COPY scripts/cwget /usr/local/bin/
RUN mkdir ${CWGET_CACHE_DIR}

FROM base AS cmake

RUN apt-get update && apt-get install -y --no-install-recommends \
    libssl-dev \
 && rm -rf /var/lib/apt/lists/*

RUN --mount=type=cache,dst=${CWGET_CACHE_DIR} cd /root \
 && cwget {{CMAKE_URL}} \
 && tar xzf cmake-{{CMAKE_VERSION}}.tar.gz \
 && cd cmake-{{CMAKE_VERSION}} \
 && ./bootstrap \
      --parallel=$(nproc) \
      --prefix=/opt/cmake \
      -- \
      -DBUILD_TESTING=OFF \
      -DCMAKE_BUILD_TYPE=Release \
 && make -j \
 && make install \
 && rm -rf /root/* \
 ;

FROM base AS common

COPY --from=cmake /opt/cmake /usr/local
