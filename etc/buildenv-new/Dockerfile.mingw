FROM common AS mingw

ENV TOOLCHAIN_DIR=/opt/toolchain
ENV CMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_DIR/toolchain.cmake

COPY --from=toolchain-mingw $TOOLCHAIN_DIR $TOOLCHAIN_DIR

ENV PATH="$TOOLCHAIN_DIR/bin:$PATH"
ENV LD_LIBRARY_PATH="$TOOLCHAIN_DIR/lib:$TOOLCHAIN_DIR/lib64:$LD_LIBRARY_PATH"

ARG LIBFFI_VERSION=3.4.7
RUN cd /root \
 && wget https://github.com/libffi/libffi/releases/download/v$LIBFFI_VERSION/libffi-$LIBFFI_VERSION.tar.gz \
 && tar xvf libffi-$LIBFFI_VERSION.tar.gz \
 && cd libffi-$LIBFFI_VERSION \
 && mkdir build \
 && cd build \
 && . $TOOLCHAIN_DIR/env.sh \
 && ../configure -v \
      --host=x86_64-w64-mingw32 \
      --prefix=$TOOLCHAIN_DIR \
      --disable-docs \
      CFLAGS="$CFLAGS -O3 -fPIC" \
      CXXFLAGS="$CXXFLAGS -DFFI_BUILDING_DLL -O3 -fPIC" \
 && make -j \
 && make install \
 && rm -rf /root/* \
 ;

ARG DLFCN_VERSION=v1.4.2
RUN cd /root \
 && git clone --depth=1 --branch=$DLFCN_VERSION https://github.com/dlfcn-win32/dlfcn-win32 \
 && cd dlfcn-win32 \
 && . $TOOLCHAIN_DIR/env.sh \
 && ./configure \
      --prefix=$TOOLCHAIN_DIR \
      --enable-shared \
      --cross-prefix=x86_64-w64-mingw32- \
 && make -j \
 && make install \
 && rm -rf /root/* \
 ;

ARG GTEST_VERSION=v1.16.0
RUN cd /root \
 && git clone --depth=1 --branch=$GTEST_VERSION https://github.com/google/googletest.git \
 && cd googletest \
 && cmake -B build -GNinja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_DIR \
 && ninja -C build \
 && ninja -C build install \
 && rm -rf /root/* \
 ;

COPY --from=toolchain-mingw-native $TOOLCHAIN_DIR-native $TOOLCHAIN_DIR-native

ARG JSON_C_VERSION=json-c-0.18-20240915
RUN cd /root \
 && git clone --depth=1 --branch=$JSON_C_VERSION https://github.com/json-c/json-c \
 && cd json-c \
 && cmake -B build -GNinja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_DIR/x86_64-w64-mingw32 \
 && ninja -C build \
 && ninja -C build install \
 && rm -rf /root/* \
 ;

RUN apt-get update && apt-get install -y --no-install-recommends \
    wine \
    winetricks \
 && rm -rf /var/lib/apt/lists/*

ENV WINEPATH="$TOOLCHAIN_DIR/x86_64-w64-mingw32/bin;$TOOLCHAIN_DIR-native/bin"
ENV WINEDEBUG=-all

ADD install_spall.sh /root/
RUN /root/install_spall.sh $TOOLCHAIN_DIR
RUN rm /root/install_spall.sh
