#link("c", "@SYSTEM_SNPRINTF_PREFIX@")
snprintf :: (s: *i8, n: u64, format: *const i8, ...) -> i32;

#link("c") {

printf :: (format: *const i8, ...) -> i32;
puts :: (str: *const i8) -> i32;

FILE :: struct {}

STDIN_FILENO  :: i32{0};
STDOUT_FILENO :: i32{1};
STDERR_FILENO :: i32{2};

fopen :: (path: *i8, mode: *i8) -> *FILE;
fdopen :: (fd: i32, mode: *i8) -> *FILE;
freopen :: (path: *i8, mode: *i8, stream: *FILE) -> *FILE;

fclose :: (stream: *FILE) -> i32;
fflush :: (stream: *FILE) -> i32;

fprintf :: (stream: *FILE, format: *i8, ... ) -> i32;
fputs :: (str: *i8, stream: *FILE) -> i32;

getchar :: () -> i32;
putchar :: (c: i32) -> i32;

fgetc :: (stream: *FILE) -> i32;

fread :: (buffer: *i8, size: u64, count: u64, stream: *FILE) -> u64;

atoi :: (str: *i8) -> i32;

memset :: (s: *void, c: i32, n: u64) -> *void;
memcmp :: (lhs: *const void, rhs: *const void, count: u64) -> i32;
strcmp :: (lhs: *const i8, rhs: *const i8) -> i32;
strlen :: (str: *const i8) -> u64;

F_GETFL :: i32{3};
F_SETFL :: i32{4};
O_NONBLOCK :: i32{2048}; // TODO Cannot write octal 04000

fcntl :: (fildes: i32, cmd: i32, ...) -> i32;

system :: (cmd: *i8) -> i32;

CLOCK_MONOTONIC :: i32{1};

clockid_t :: i32;
timespec :: struct {
    tv_sec: i64,
    tv_nsec: i64,
}

clock_gettime :: (clockid: clockid_t, tp: *timespec) -> i32;
nanosleep :: (rqtp: *const timespec, rmtp: *timespec) -> i32;

rand :: () -> i32;
srand :: (seed: u32) -> void;

time_t :: i64;
time :: (timer: *time_t) -> time_t;

}

#link("m") {

sqrt :: (x: f64) -> f64;
sqrtf :: (x: f32) -> f32;

}
