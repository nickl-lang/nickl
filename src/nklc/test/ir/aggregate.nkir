extern "c" proc printf(:i64, ...) :i32
extern "m" proc sqrt(:f64) :f64

type Vec2 :{[2]f64}

local proc Vec2_length(:Vec2 %vec) :f64 {
    load %vec -> :f64 %x
    add %vec, 8 -> %y_addr
    load %y_addr -> :f64 %y
    mul :f64 %x, %x -> %x2
    mul :f64 %y, %y -> %y2
    add :f64 %x2, %y2 -> %len2
    call sqrt, (:f64 %len2) -> :f64 %len
    ret %len
}

pub proc _entry() {
    call Vec2_length, (:Vec2 {[1.2, 3.4]}) -> :f64 %len
    call printf, ("%lf\n", ..., :f64 %len) -> :i32
    ret
}

pub proc main(:i32 %argc, :i64 %argv) :i32 {
    call _entry, ()
    ret 0
}

/* @output
3.605551

@endoutput */
